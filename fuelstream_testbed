
# %%
import fastf1
from matplotlib import pyplot as plt
from fastf1 import plotting
import numpy as np

plotting.setup_mpl()

#loading all session data
session = fastf1.get_session(2021, "Silverstone", 'Q')
session.load()

lap = session.laps.pick_fastest()
pos = lap.get_pos_data()

circuit_info = session.get_circuit_info()

#helper function for rotating points around origin of the coordinate system
def rotate(xy, *, angle):
    rot_mat = np.array([[np.cos(angle), np.sin(angle)],
                        [-np.sin(angle), np.cos(angle)]])
    return np.matmul(xy, rot_mat)

#get coordinates of track map from telemtry and rotate the coors so map is oriented correctly
track = pos.loc[:, ('X', 'Y')].to_numpy()

track_angle = circuit_info.rotation / 180 * np.pi 

rotated_track = rotate(track, angle=track_angle)
plt.plot(rotated_track[:, 0], rotated_track[:, 1])

#plot corner markets
offset_vector = [500, 0]

for _, corner in circuit_info.corners.iterrows():
    txt = f"{corner['Number']}{corner['Letter']}"
    offset_angle = corner['Angle'] / 18 * np.pi
    offset_x, offset_y = rotate(offset_vector, angle = track_angle)
    text_x = corner['X'] + offset_x
    text_y = corner['Y'] + offset_y
    text_x, text_y = rotate([text_x, text_y], angle=track_angle)
    track_x, track_y = rotate([corner['X'], corner['Y']], angle=track_angle)

    plt.scatter(text_x, text_y, color='grey', s=140)
    plt.plot([track_x, text_x], [track_y, text_y], color='grey')
    plt.text(text_x, text_y, txt, va='center_baseline', ha='center', size='small', color='white')

print("test test test")

#plotting
plt.title(session.event['Location'])
plt.xticks([])
plt.yticks([])
plt.axis('equal')
plt.show()

print("test succesfull")
# %%
